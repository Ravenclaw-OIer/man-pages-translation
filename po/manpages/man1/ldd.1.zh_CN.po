# Chinese translations for manpages package
# manpages 软件包的简体中文翻译
# Copyright (C) 2017 Free Software Foundation, Inc.
# This file is distributed under the same license as the manpages package.
#
# Automatically generated, 2017.
# Boyuan Yang <073plan@gmail.com>, 2017, 2022.
# Zheng Junyi <zhengjunyi@live.com>, 2020.
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2017-02-14 19:14+0800\n"
"PO-Revision-Date: 2022-12-09 14:23-0500\n"
"Last-Translator: Yang, Boyuan <073plan@gmail.com>\n"
"Language-Team: Chinese <i18n-zh@googlegroups.com>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Lokalize 21.12.3\n"

#. type: TH
#: raw/manpages/man1/ldd.1:14
#, no-wrap
msgid "LDD"
msgstr "LDD"

#. type: TH
#: raw/manpages/man1/ldd.1:14
#, no-wrap
msgid "2016-07-17"
msgstr "2016-07-17"

#. type: TH
#: raw/manpages/man1/ldd.1:14
#, no-wrap
msgid "Linux Programmer's Manual"
msgstr "Linux 程序员手册"

#. type: SH
#: raw/manpages/man1/ldd.1:15
#, no-wrap
msgid "NAME"
msgstr "名称"

#. type: Plain text
#: raw/manpages/man1/ldd.1:17
msgid "ldd - print shared object dependencies"
msgstr "ldd - 显示共享库的依赖情况"

#. type: SH
#: raw/manpages/man1/ldd.1:17
#, no-wrap
msgid "SYNOPSIS"
msgstr "概述"

#. type: Plain text
#: raw/manpages/man1/ldd.1:19
msgid "B<ldd> [I<option>]... I<file>..."
msgstr "B<ldd> [I<选项>]... I<文件>..."

#. type: SH
#: raw/manpages/man1/ldd.1:19
#, no-wrap
msgid "DESCRIPTION"
msgstr "描述"

#. type: Plain text
#: raw/manpages/man1/ldd.1:24
msgid ""
"B<ldd> prints the shared objects (shared libraries) required by each program "
"or shared object specified on the command line.  An example of its use and "
"output is the following:"
msgstr "B<ldd> 显示命令行上指定的每个程序或共享库所需的共享库 (共享库) 。其用法和输出示例如下："

#. type: Plain text
#: raw/manpages/man1/ldd.1:37
#, no-wrap
msgid ""
"$ B<ldd /bin/ls>\n"
"        linux-vdso.so.1 (0x00007ffcc3563000)\n"
"        libselinux.so.1 =E<gt> /lib64/libselinux.so.1 (0x00007f87e5459000)\n"
"        libcap.so.2 =E<gt> /lib64/libcap.so.2 (0x00007f87e5254000)\n"
"        libc.so.6 =E<gt> /lib64/libc.so.6 (0x00007f87e4e92000)\n"
"        libpcre.so.1 =E<gt> /lib64/libpcre.so.1 (0x00007f87e4c22000)\n"
"        libdl.so.2 =E<gt> /lib64/libdl.so.2 (0x00007f87e4a1e000)\n"
"        /lib64/ld-linux-x86-64.so.2 (0x00005574bf12e000)\n"
"        libattr.so.1 =E<gt> /lib64/libattr.so.1 (0x00007f87e4817000)\n"
"        libpthread.so.0 =E<gt> /lib64/libpthread.so.0 (0x00007f87e45fa000)\n"
msgstr ""
"$ B<ldd /bin/ls>\n"
"        linux-vdso.so.1 (0x00007ffcc3563000)\n"
"        libselinux.so.1 =E<gt> /lib64/libselinux.so.1 (0x00007f87e5459000)\n"
"        libcap.so.2 =E<gt> /lib64/libcap.so.2 (0x00007f87e5254000)\n"
"        libc.so.6 =E<gt> /lib64/libc.so.6 (0x00007f87e4e92000)\n"
"        libpcre.so.1 =E<gt> /lib64/libpcre.so.1 (0x00007f87e4c22000)\n"
"        libdl.so.2 =E<gt> /lib64/libdl.so.2 (0x00007f87e4a1e000)\n"
"        /lib64/ld-linux-x86-64.so.2 (0x00005574bf12e000)\n"
"        libattr.so.1 =E<gt> /lib64/libattr.so.1 (0x00007f87e4817000)\n"
"        libpthread.so.0 =E<gt> /lib64/libpthread.so.0 (0x00007f87e45fa000)\n"

#. type: Plain text
#: raw/manpages/man1/ldd.1:63
msgid ""
"In the usual case, B<ldd> invokes the standard dynamic linker (see B<ld."
"so>(8))  with the B<LD_TRACE_LOADED_OBJECTS> environment variable set to 1.  "
"This causes the dynamic linker to inspect the program's dynamic "
"dependencies, and find (according to the rules described in B<ld.so>(8))  "
"and load the objects that satisfy those dependencies.  For each dependency, "
"B<ldd> displays the location of the matching object and the (hexadecimal) "
"address at which it is loaded.  (The I<linux-vdso> and I<ld-linux> shared "
"dependencies are special; see B<vdso>(7)  and B<ld.so>(8).)"
msgstr ""
"在通常情况下，如果环境变量 B<LD_TRACE_LOADED_OBJECTS> 设置为 1，则 B<ldd> 会调用标准"
"动态链接程序 (请参阅 B<ld.so>(8)) 。这将检查程序的动态库的依赖关系， 并查找 (根据 B<ld.so>(8) "
"中描述的规则) 与加载满足那些依赖关系的对象。 对于每个依赖项，B<ldd> 显示匹配对象的位置以及加载该"
"对象的 (十六进制) 地址。 (I<linux-vdso> 和 I<ld-linux> 共享依赖项是特殊的；请参阅 B<vdso>(7)"
" 和 B<ld.so>(8)。) "

#. type: SS
#: raw/manpages/man1/ldd.1:63
#, no-wrap
msgid "Security"
msgstr "安全性"

#.  The circumstances are where the program has an interpreter
#.  other than ld-linux.so. In this case, ldd tries to execute the
#.  program directly with LD_TRACE_LOADED_OBJECTS=1, with the
#.  result that the program interpreter gets control, and can do
#.  what it likes, or pass control to the program itself.
#.  Much more detail at
#.  http://www.catonmat.net/blog/ldd-arbitrary-code-execution/
#.  Mainline glibc's ldd allows this possibility (the line
#.       try_trace "$file"
#.  in glibc 2.15, for example), but many distro versions of
#.  ldd seem to remove that code path from the script.
#. type: Plain text
#: raw/manpages/man1/ldd.1:92
msgid ""
"Be aware that in some circumstances (e.g., where the program specifies an "
"ELF interpreter other than I<ld-linux.so>), some versions of B<ldd> may "
"attempt to obtain the dependency information by attempting to directly "
"execute the program (which may lead to the execution of whatever code is "
"defined in the program's ELF interpreter, and perhaps to execution of the "
"program itself).  Thus, you should I<never> employ B<ldd> on an untrusted "
"executable, since this may result in the execution of arbitrary code.  A "
"safer alternative when dealing with untrusted executables is:"
msgstr ""
"请注意，在某些情况下 (例如，程序指定了 I<ld-linux.so> 以外的 ELF 解释器) ，某些版本的 B<ldd> "
"可能会尝试通过尝试直接执行程序来获取依赖项信息 (这可能导致执行程序的 ELF 解释器中定义的任何代码，"
"甚至可能导致直接执行程序本身) 。因此，您不应该在不受信任的可执行文件上使用 B<ldd>，因为这可能会导致"
"执行任意代码。处理不受信任的可执行文件时，更安全的选择是："

#. type: Plain text
#: raw/manpages/man1/ldd.1:94
#, no-wrap
msgid "    $ B<objdump -p /path/to/program | grep NEEDED>\n"
msgstr "    $ B<objdump -p /path/to/program | grep NEEDED>\n"

#. type: SH
#: raw/manpages/man1/ldd.1:94
#, no-wrap
msgid "OPTIONS"
msgstr "选项"

#. type: TP
#: raw/manpages/man1/ldd.1:95
#, no-wrap
msgid "B<--version>"
msgstr "B<--version>"

#. type: Plain text
#: raw/manpages/man1/ldd.1:99
msgid "Print the version number of B<ldd>."
msgstr "显示 B<ldd> 的版本号"

#. type: TP
#: raw/manpages/man1/ldd.1:99
#, no-wrap
msgid "B<-v>, B<--verbose>"
msgstr "B<-v>, B<--verbose>"

#. type: Plain text
#: raw/manpages/man1/ldd.1:103
msgid ""
"Print all information, including, for example, symbol versioning information."
msgstr "显示所有信息，包括符号版本 (symbol versioning) 信息。"

#. type: TP
#: raw/manpages/man1/ldd.1:103
#, no-wrap
msgid "B<-u>, B<--unused>"
msgstr "B<-u>, B<--unused>"

#. type: Plain text
#: raw/manpages/man1/ldd.1:107
msgid "Print unused direct dependencies.  (Since glibc 2.3.4.)"
msgstr "显示未使用的直接依赖项。 (需要 glibc 2.3.4)"

#. type: TP
#: raw/manpages/man1/ldd.1:107
#, no-wrap
msgid "B<-d>, B<--data-relocs>"
msgstr "B<-d>, B<--data-relocs>"

#. type: Plain text
#: raw/manpages/man1/ldd.1:110
msgid "Perform relocations and report any missing objects (ELF only)."
msgstr "执行重定向并报告所有缺少的对象 (仅限于 ELF) 。"

#. type: TP
#: raw/manpages/man1/ldd.1:110
#, no-wrap
msgid "B<-r>, B<--function-relocs>"
msgstr "B<-r>, B<--function-relocs>"

#. type: Plain text
#: raw/manpages/man1/ldd.1:114
msgid ""
"Perform relocations for both data objects and functions, and report any "
"missing objects or functions (ELF only)."
msgstr "对数据对象和函数执行重定向，并报告所有缺少的对象或函数 (仅限于 ELF) 。"

#. type: TP
#: raw/manpages/man1/ldd.1:114
#, no-wrap
msgid "B<--help>"
msgstr "B<--help>"

#.  .SH NOTES
#.  The standard version of
#.  .B ldd
#.  comes with glibc2.
#.  Libc5 came with an older version, still present
#.  on some systems.
#.  The long options are not supported by the libc5 version.
#.  On the other hand, the glibc2 version does not support
#.  .B \-V
#.  and only has the equivalent
#.  .BR \-\-version .
#.  .LP
#.  The libc5 version of this program will use the name of a library given
#.  on the command line as-is when it contains a \(aq/\(aq; otherwise it
#.  searches for the library in the standard locations.
#.  To run it
#.  on a shared library in the current directory, prefix the name with "./".
#. type: Plain text
#: raw/manpages/man1/ldd.1:134
msgid "Usage information."
msgstr "使用信息"

#. type: SH
#: raw/manpages/man1/ldd.1:134
#, no-wrap
msgid "BUGS"
msgstr "BUGS"

#. type: Plain text
#: raw/manpages/man1/ldd.1:137
msgid "B<ldd> does not work on a.out shared libraries."
msgstr "B<ldd> 在 a.out 共享库上可能无法工作。"

#.  .SH AUTHOR
#.  David Engel.
#.  Roland McGrath and Ulrich Drepper.
#. type: Plain text
#: raw/manpages/man1/ldd.1:151
msgid ""
"B<ldd> does not work with some extremely old a.out programs which were built "
"before B<ldd> support was added to the compiler releases.  If you use B<ldd> "
"on one of these programs, the program will attempt to run with I<argc> = 0 "
"and the results will be unpredictable."
msgstr ""
"对于某些非常老的 a.out 程序，构建时所使用的编译器尚未添加 B<ldd> 支持，B<ldd> 可能无法正常"
"工作。如果在这些程序上使用 B<ldd>，则该程序将尝试以 I<argc>=0 运行，结果将不可预测。"

#. type: SH
#: raw/manpages/man1/ldd.1:151
#, no-wrap
msgid "SEE ALSO"
msgstr "参考"

#. type: Plain text
#: raw/manpages/man1/ldd.1:156
msgid "B<pldd>(1), B<sprof>(1), B<ld.so>(8), B<ldconfig>(8)"
msgstr "B<pldd>(1), B<sprof>(1), B<ld.so>(8), B<ldconfig>(8)"

#. type: SH
#: raw/manpages/man1/ldd.1:156
#, no-wrap
msgid "COLOPHON"
msgstr "COLOPHON"

#. type: Plain text
#: raw/manpages/man1/ldd.1:164
msgid ""
"This page is part of release 4.09 of the Linux I<man-pages> project.  A "
"description of the project, information about reporting bugs, and the latest "
"version of this page, can be found at \\%https://www.kernel.org/doc/man-"
"pages/."
msgstr ""
"本页面是 Linux I<man-pages> 项目 4.09 版的一部分。该项目的描述、有关报告错误"
"的信息以及本页面的最新版本可以在 \\%https://www.kernel.org/doc/pan-pages/ 上"
"找到。"
